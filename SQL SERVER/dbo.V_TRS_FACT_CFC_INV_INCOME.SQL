-- dbo.V_TRS_FACT_CFC_INV_INCOME source

CREATE VIEW dbo.V_TRS_FACT_CFC_INV_INCOME AS 
WITH T_ORDER AS(
SELECT 
	ROW_NUMBER()OVER(PARTITION BY PERIOD, ENTITY_CODE,CFC_ENTITY_CODE,SCENARIO, FISCAL_YEAR ORDER BY PERIOD1 ,CASE WHEN DATA_TYPE = 'DIVIDEND' THEN 1
	WHEN DATA_TYPE = 'SHARES' THEN 2
	WHEN DATA_TYPE = 'PROFIT' THEN 3 END) AS ORDERS,
	FISCAL_YEAR,
	PERIOD,
	PERIOD1,
	SCENARIO,
	ENTITY_CODE,
	CFC_ENTITY_CODE,
	AMOUNT,
	CHANGES,
	DATA_TYPE,
	CHINA
FROM TEMP_TRS_FACT_CFC_INV_INCOME2
)--SELECT * FROM T_ORDER WHERE TO_CHAR(PERIOD, 'YYYY-MM-DD') = '2024-06-30' AND SCENARIO = 'Per Audit' AND CFC_ENTITY_CODE = 'P00013_BVI' 
,DETAILS(ORDERS,FISCAL_YEAR,PERIOD,PERIOD1,SCENARIO,ENTITY_CODE,CFC_ENTITY_CODE,AMOUNT,CHANGES,AMOUNT_CHANGES,ACC_AMOUNT, DATA_TYPE, CHINA, E2) AS(
SELECT 
	ORDERS,
	FISCAL_YEAR,
	PERIOD,
	PERIOD1,
	SCENARIO,
	ENTITY_CODE,
	CFC_ENTITY_CODE,
	AMOUNT,
	CHANGES,
	ISNULL(CAST(AMOUNT AS FLOAT),0) AS AMOUNT_CHANGES,
	ISNULL(CAST(AMOUNT AS FLOAT),0) AS ACC_AMOUNT,
	DATA_TYPE,
	CHINA,
	CAST(AMOUNT AS FLOAT) AS E2
FROM T_ORDER
WHERE ORDERS = 1
UNION ALL 
SELECT 
	T1.ORDERS,
	T1.FISCAL_YEAR,
	T1.PERIOD,
	T1.PERIOD1,
	T1.SCENARIO,
	T1.ENTITY_CODE,
	T1.CFC_ENTITY_CODE,
	T1.AMOUNT,
	T1.CHANGES,
	CAST(CASE 
	WHEN T1.CHANGES IS NULL THEN ISNULL(T1.AMOUNT,0)
	WHEN T1.DATA_TYPE = 'SHARES' AND T2.ACC_AMOUNT <= 0 THEN 0
	ELSE T1.CHANGES*T2.ACC_AMOUNT 
	END  AS FLOAT)AS AMOUNT_CHANGES,
	CAST(CASE 
	WHEN YEAR(T1.PERIOD1) != T1.FISCAL_YEAR AND T1.CHANGES IS NULL AND T1.AMOUNT + T2.ACC_AMOUNT <= 0 THEN T2.ACC_AMOUNT * -1
	WHEN T1.CHANGES IS NULL THEN ISNULL(T1.AMOUNT,0)
	WHEN T1.DATA_TYPE = 'SHARES' AND T2.ACC_AMOUNT <= 0 THEN T2.ACC_AMOUNT * -1
	ELSE T1.CHANGES*T2.ACC_AMOUNT 
	END +ISNULL(T2.ACC_AMOUNT,0) AS FLOAT) AS ACC_AMOUNT,
	t1.DATA_TYPE,
	t1.CHINA,
	CAST(CASE 
	WHEN YEAR(T1.PERIOD1) != T1.FISCAL_YEAR AND T1.CHANGES IS NULL AND T1.AMOUNT + T2.ACC_AMOUNT <= 0 THEN 0
	WHEN T1.CHANGES IS NULL THEN ISNULL(T1.AMOUNT,0)
	WHEN T1.DATA_TYPE = 'SHARES' AND T2.ACC_AMOUNT <= 0 THEN 0
	ELSE T1.CHANGES*ISNULL(T2.ACC_AMOUNT ,0)
	END AS FLOAT )AS E2
FROM T_ORDER T1
JOIN DETAILS T2 ON T1.ORDERS = T2.ORDERS+1 AND T1.ENTITY_CODE = T2.ENTITY_CODE AND T1.CFC_ENTITY_CODE = T2.CFC_ENTITY_CODE AND T1.PERIOD = T2.PERIOD AND t1.SCENARIO = t2.SCENARIO AND t1.FISCAL_YEAR = t2.FISCAL_YEAR
)--SELECT * FROM DETAILS --WHERE TO_CHAR(PERIOD, 'YYYY-MM-DD') = '2027-12-31' AND SCENARIO = 'Per Audit' AND CFC_ENTITY_CODE = 'P00013_BVI' 
,CTE AS (
SELECT 
	ORDERS,
	FISCAL_YEAR,
	PERIOD,
	PERIOD1,
	SCENARIO,
	ENTITY_CODE,
	CFC_ENTITY_CODE,
	AMOUNT,
	CHANGES,
	AMOUNT_CHANGES,
	ACC_AMOUNT,
	DATA_TYPE,
	CHINA,
	ROUND(E2,0,1) AS E2
FROM DETAILS
WHERE FISCAL_YEAR IN (SELECT DISTINCT FISCAL_YEAR FROM TEMP_TRS_FACT_CFC_INV_INCOME2)
)--SELECT * FROM CTE
,CTE_E1 AS (
SELECT
	t1.PERIOD,
	YEAR(t1.PERIOD) AS REC_YEAR,
	t1.ENTITY_CODE,
	t1.CFC_ENTITY_CODE,
	t1.SCENARIO,
	t1.FISCAL_YEAR,
	t1.AMOUNT AS E1
FROM CTE t1
WHERE
	t1.AMOUNT > 0
)
,CTE_E5 AS (
SELECT
	PERIOD,
	FISCAL_YEAR,
	SCENARIO,
	ENTITY_CODE,
	CFC_ENTITY_CODE,
	SUM(ISNULL(ROUND(AMOUNT_CHANGES,0,1),0)) * -1 AS E5
FROM CTE 
WHERE YEAR(PERIOD) = YEAR(PERIOD1)
AND DATA_TYPE= 'SHARES'
GROUP BY PERIOD, FISCAL_YEAR, YEAR(PERIOD), SCENARIO ,ENTITY_CODE, CFC_ENTITY_CODE
), CTE_E2 AS (
SELECT 
PERIOD,
FISCAL_YEAR,
SCENARIO,
ENTITY_CODE,
CFC_ENTITY_CODE,
SUM(E2) * -1 AS E2
FROM CTE
WHERE E2 <= 0 --AND ACC_AMOUNT != 0
AND YEAR(PERIOD1)<=YEAR(PERIOD)-1
GROUP BY PERIOD,
FISCAL_YEAR,
SCENARIO,
ENTITY_CODE,
CFC_ENTITY_CODE
)
,CTE2 AS (
SELECT
	t1.PERIOD,
	t1.REC_YEAR,
	t1.ENTITY_CODE,
	t1.CFC_ENTITY_CODE,
	t1.SCENARIO,
	t1.FISCAL_YEAR,
	FLOOR(t1.E1) AS E1,
	ISNULL(t3.E2, 0) AS E2,
	ISNULL(t2.E5,0) AS E5,
	ISNULL(t4.AMOUNT,0) AS E7
FROM CTE_E1 t1
LEFT JOIN CTE_E5 t2 ON t1.PERIOD = t2.PERIOD AND t1.FISCAL_YEAR = t2.FISCAL_YEAR AND t1.SCENARIO = t2.SCENARIO AND t1.ENTITY_CODE = t2.ENTITY_CODE AND t1.CFC_ENTITY_CODE = t2.CFC_ENTITY_CODE
LEFT JOIN CTE_E2 t3 ON t1.PERIOD = t3.PERIOD AND t1.FISCAL_YEAR = t3.FISCAL_YEAR AND t1.SCENARIO = t3.SCENARIO AND t1.ENTITY_CODE = t3.ENTITY_CODE AND t1.CFC_ENTITY_CODE = t3.CFC_ENTITY_CODE
LEFT JOIN TRS_FACT_CFC_E7 t4 ON t1.PERIOD = t4.PERIOD AND t1.FISCAL_YEAR = t4.FISCAL_YEAR AND t1.SCENARIO = t4.SCENARIO AND t1.ENTITY_CODE = t4.ENTITY_CODE AND t1.CFC_ENTITY_CODE = t4.CFC_ENTITY_CODE
)
,CTE_DIVIDEND AS (
SELECT
	PERIOD,
	FISCAL_YEAR,
	SCENARIO,
	ENTITY_CODE,
	CFC_ENTITY_CODE,
	AVG_EXCHANGE_RATIO,
	L_EXCHANGE_RATE_DATE,
	SUM(NON_CHINA_DIVIDEND_PROFIT_NTD6) AS DIVIDEND6,
	SUM(NON_CHINA_PAID_TAX_NTD10) AS DIVIDEND10,
	SUM(CHINA_DIVIDEND_PROFIT_NTD7) AS DIVIDEND7,
	SUM(CHINA_PAID_TAX_NTD11) AS DIVIDEND11
FROM V_TRS_FACT_CFC_DIVIDEND
GROUP BY PERIOD, FISCAL_YEAR, SCENARIO, ENTITY_CODE, CFC_ENTITY_CODE,L_EXCHANGE_RATE_DATE, AVG_EXCHANGE_RATIO
),CTE3 AS (
SELECT
	t1.PERIOD,
	t1.REC_YEAR,
	t1.ENTITY_CODE,
	t1.CFC_ENTITY_CODE,
	t1.SCENARIO,
	t1.FISCAL_YEAR,
	t1.E1,
	t1.E2,
	ISNULL(t3.DIVIDEND6,0) - (t1.E7 * (t3.AVG_EXCHANGE_RATIO / t3.L_EXCHANGE_RATE_DATE)) AS E3,
	CASE 
    WHEN 
        (CASE WHEN t3.DIVIDEND7 < 
            (t1.E1 - E2 - (ISNULL(t3.DIVIDEND6,0) - (t1.E7 * (t3.AVG_EXCHANGE_RATIO / t3.L_EXCHANGE_RATE_DATE))) - ISNULL(t1.E5, 0)) 
         THEN t3.DIVIDEND7 
         ELSE 
            (t1.E1 - E2 - (ISNULL(t3.DIVIDEND6,0) - (t1.E7 * (t3.AVG_EXCHANGE_RATIO / t3.L_EXCHANGE_RATE_DATE))) - ISNULL(t1.E5, 0)) 
         END) > 0 
    THEN 
        (CASE WHEN t3.DIVIDEND7 < 
            (t1.E1 - E2 - (ISNULL(t3.DIVIDEND6,0) - (t1.E7 * (t3.AVG_EXCHANGE_RATIO / t3.L_EXCHANGE_RATE_DATE))) - ISNULL(t1.E5, 0)) 
         THEN t3.DIVIDEND7 
         ELSE 
            (t1.E1 - E2 - (ISNULL(t3.DIVIDEND6,0) - (t1.E7 * (t3.AVG_EXCHANGE_RATIO / t3.L_EXCHANGE_RATE_DATE))) - ISNULL(t1.E5, 0)) 
         END)
    ELSE 0 
END AS E4,
	ISNULL(t3.DIVIDEND11,0) AS DIVIDEND11,
	ISNULL(t3.DIVIDEND6,0) AS DIVIDEND6,
	ISNULL(t3.DIVIDEND7,0) AS DIVIDEND7,
	ISNULL(t3.DIVIDEND10,0) AS DIVIDEND10,
	t3.AVG_EXCHANGE_RATIO,
	t3.L_EXCHANGE_RATE_DATE AS L_EXCHANGE_RATE_DATE,
	t1.E5,
	t1.E7
FROM CTE2 t1
LEFT JOIN CTE_DIVIDEND t3 ON t1.PERIOD = t3.PERIOD AND t1.FISCAL_YEAR = t3.FISCAL_YEAR AND t1.SCENARIO = t3.SCENARIO AND t1.ENTITY_CODE = t3.ENTITY_CODE AND t1.CFC_ENTITY_CODE = t3.CFC_ENTITY_CODE
)
SELECT
	t1.PERIOD,
	t1.REC_YEAR,
	t1.ENTITY_CODE,
	t1.CFC_ENTITY_CODE,
	t1.SCENARIO,
	t1.FISCAL_YEAR,
	t1.E1,
	t1.E2,
	ISNULL(t1.E3,0) AS E3,
	ISNULL(t1.E4,0) AS E4,
	ISNULL(t1.E5,0) AS E5,
	t1.E1 - t1.E2 - ISNULL(t1.E3,0) - ISNULL(t1.E4,0) - ISNULL(t1.E5,0) AS E6,
	ISNULL(t1.E7,0) AS E7,
	ISNULL((t1.DIVIDEND7 - t1.E4) * ( t1.L_EXCHANGE_RATE_DATE/t1.AVG_EXCHANGE_RATIO ),0) AS E8,
	t1.DIVIDEND10 * (ISNULL(t1.E3,0)/AVG_EXCHANGE_RATIO) / ( (E3/AVG_EXCHANGE_RATIO) + (E7/L_EXCHANGE_RATE_DATE) ) AS E9,
	DIVIDEND11 * (ISNULL(t1.E4,0)/AVG_EXCHANGE_RATIO) / ISNULL(NULLIF( ( (E4/AVG_EXCHANGE_RATIO) + ( ((t1.DIVIDEND7 - t1.E4) * (t1.L_EXCHANGE_RATE_DATE/t1.AVG_EXCHANGE_RATIO))/L_EXCHANGE_RATE_DATE) ) , 0), 1) AS E10,
	DIVIDEND10 - t1.DIVIDEND10 * (ISNULL(t1.E3,0)/AVG_EXCHANGE_RATIO) / ( (E3/AVG_EXCHANGE_RATIO) + (E7/L_EXCHANGE_RATE_DATE) ) AS E11,
	DIVIDEND11 - DIVIDEND11 * (ISNULL(t1.E4,0)/AVG_EXCHANGE_RATIO) / ISNULL(NULLIF(( (E4/AVG_EXCHANGE_RATIO) + (t1.DIVIDEND7 - t1.E4) * (t1.AVG_EXCHANGE_RATIO / t1.L_EXCHANGE_RATE_DATE) ), 0) ,1) AS E12,
	AVG_EXCHANGE_RATIO,
	L_EXCHANGE_RATE_DATE,
	DIVIDEND6,
	DIVIDEND7
FROM CTE3 t1;