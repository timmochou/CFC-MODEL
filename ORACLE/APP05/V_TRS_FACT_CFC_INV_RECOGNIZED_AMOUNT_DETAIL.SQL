-- TRSDB.V_TRS_FACT_CFC_INV_RECOGNIZED_AMOUNT_DETAIL source

CREATE OR REPLACE FORCE EDITIONABLE VIEW "TRSDB"."V_TRS_FACT_CFC_INV_RECOGNIZED_AMOUNT_DETAIL" ("PERIOD", "SCENARIO", "BASE_ENTITY", "INV_ENTITY", "RATIO", "ID", "COUNTRY_ID", "IS_LOWTAX", "CURRENCY_ID", "AVG_EXCHANGE_RATIO", "AMOUNT", "RE_AMOUNT", "CFC_TAX", "CFC_CURRENCY", "CFC_EXCHANGE_RATIO") AS 
  WITH CTE AS (
SELECT
	t1.PERIOD,
	t1.ENTITY_CODE,
	t1.INV_ENTITY_CODE,
	SUM(AVG_RATIO_HOLD) AS RATIO_HOLD
FROM V_TRS_FACT_CFC_RATIO_HOLD t1
JOIN TRS_DIM_ENTITY t2 ON t1.ENTITY_CODE =t2.ENTITY_CODE --取company_id
JOIN TRS_FACT_COUNTRY_TAX t3 ON t2.COUNTRY_ID = t3.COUNTRY_CODE AND t3.IS_LOWTAX = 'true' AND t1.PERIOD BETWEEN t3.START_DATE AND t3.END_DATE --取是否為低稅區
GROUP BY PERIOD, t1.ENTITY_CODE, INV_ENTITY_CODE,t3.IS_LOWTAX
)
, stock_ratio (PERIOD, base_entity, inv_entity, ratio, path, depth) AS (
  --初始化所有基本關係
  SELECT PERIOD, ENTITY_CODE, INV_ENTITY_CODE, RATIO_HOLD, ENTITY_CODE || '->' || INV_ENTITY_CODE, 1
  FROM CTE
  UNION ALL
  -- 遞歸擴展關係
  SELECT t1.PERIOD, t1.base_entity, t2.INV_ENTITY_CODE, t1.ratio * t2.RATIO_HOLD, 
         t1.path || '->' || t2.INV_ENTITY_CODE, t1.depth + 1
  FROM stock_ratio t1
  JOIN CTE t2 ON t1.inv_entity = t2.ENTITY_CODE AND TO_CHAR(t1.PERIOD, 'YYYY-MM-DD') = TO_CHAR(t2.PERIOD, 'YYYY-MM-DD')  --AND t2.IS_LOWTAX = 'true'
  WHERE t1.depth <= 20 -- 限制遞歸深度以防止無限循環
)
,CTE2 AS (
SELECT PERIOD, 
base_entity, 
inv_entity, 
ratio, 
Path, 
DEPTH
FROM stock_ratio
WHERE ratio != 0
),CTE_HEAD AS (
SELECT 
	PERIOD,
	BASE_ENTITY,
	INV_ENTITY,
	SUM(RATIO) AS RATIO
FROM CTE2
GROUP BY PERIOD, BASE_ENTITY, INV_ENTITY
),CTE_PERIOD AS (
	SELECT 
		PERIOD,
		ENTITY_CODE,
		SCENARIO
	FROM V_TRS_FACT_CFC_ENTITY_VERSION
), CTE_MV AS (
	SELECT
		T1.CURRENT_CODE AS ENTITY_CODE,
		T1.SCENARIO,
		--有些月份是06有些是6，統一格式
		T1.PERIOD || '-' || LPAD(T1.MONTH, 2, 0)  AS PERIOD,
		T1.CURRENCY_CODE,
		--原始方向改正
		SUM(T1.ACCUMULATED_AMOUNT_ORI) * -1 AS ACCUMULATED_AMOUNT 
	FROM MV_TRS_TB_ACTUAL_ACCOUNT_AMOUNT T1
	WHERE SUBSTR(T2_CODE, 0, 1) BETWEEN '4' AND '7'
	GROUP BY T1.CURRENT_CODE, T1.SCENARIO, T1.PERIOD || '-' || LPAD(T1.MONTH,2,0), T1.CURRENCY_CODE
), CTE_ENTITY AS (
	SELECT 
		ENTITY_CODE,
		COUNTRY_ID,
		CURRENCY_ID
	FROM TRS_DIM_ENTITY
	--改取View不下條件
	--WHERE ENTITY_TYPE_ID = '003'
	--	AND IS_ACTIVE = 'true'
	UNION ALL
	SELECT
		ENTITY_CODE,
		TO_CHAR(COUNTRY_CODE),
		NULL AS CURRENCY_ID
	FROM TRS_DIM_EQUITY_INV_LIST
), INV_RECOGNIZED_AMOUNT AS(
SELECT
ID,
PERIOD,
--CFC_ENTITY_CODE,
t2.CURRENT_CODE AS CFC_ENTITY_CODE,
SCENARIO,
--CFC_INV_ENTITY_CODE,
t3.CURRENT_CODE AS CFC_INV_ENTITY_CODE,
t1.CURRENCY_ID,
RECOGNIZED_AMOUNT,
CFC_TAX,
RE_AMOUNT
FROM 
TRS_FACT_CFC_INV_RECOGNIZED_AMOUNT t1
LEFT JOIN V_TRS_DIM_ENTITY_CUR t2 ON t1.CFC_ENTITY_CODE =t2.ENTITY_CODE --取CFC_ENTITY_CODE現值
LEFT JOIN V_TRS_DIM_ENTITY_CUR t3 ON t1.CFC_INV_ENTITY_CODE =t3.ENTITY_CODE --取CFC_ENTITY_CODE現值
)
SELECT
	t0.PERIOD,
	t0.SCENARIO,
	t1.BASE_ENTITY,
	t1.INV_ENTITY,
	TRUNC(t1.RATIO, 4) AS RATIO,
	t4.ID,
	t2.COUNTRY_ID,
	NVL(t3.IS_LOWTAX, t10.IS_LOWTAX) AS IS_LOWTAX,
	NVL(t2.CURRENCY_ID, t4.CURRENCY_ID) AS CURRENCY_ID,
	NVL(t5.AVG_EXCHANGE_RATIO, t11.AVG_EXCHANGE_RATIO) AS AVG_EXCHANGE_RATIO,
	NVL(t8.ACCUMULATED_AMOUNT, t4.RECOGNIZED_AMOUNT) AS AMOUNT,
	t4.RE_AMOUNT,
	t4.CFC_TAX,
	t6.CURRENCY_ID AS CFC_CURRENCY,
	t7.AVG_EXCHANGE_RATIO AS CFC_EXCHANGE_RATIO
FROM CTE_PERIOD t0
JOIN CTE_HEAD t1 ON t0.PERIOD = t1.PERIOD AND t0.ENTITY_CODE = t1.BASE_ENTITY
JOIN CTE_ENTITY t2 ON t1.INV_ENTITY = t2.ENTITY_CODE --AND t2.ENTITY_TYPE_ID = '003'
JOIN TRS_FACT_COUNTRY_TAX t3 ON t2.COUNTRY_ID = t3.COUNTRY_CODE AND t0.PERIOD BETWEEN t3.START_DATE AND t3.END_DATE AND t3.IS_LOWTAX = 'false'
LEFT JOIN INV_RECOGNIZED_AMOUNT t4 ON t1.PERIOD = t4.PERIOD AND t1.BASE_ENTITY = t4.CFC_ENTITY_CODE AND t1.INV_ENTITY = t4.CFC_INV_ENTITY_CODE AND t0.SCENARIO = t4.SCENARIO
LEFT JOIN CTE_ENTITY t6 ON t1.BASE_ENTITY = t6.ENTITY_CODE --AND t6.ENTITY_TYPE_ID = '003'
LEFT JOIN V_TRS_FACT_EXCHANGE_BANKOFTW t7 ON t6.CURRENCY_ID = t7.CURRENCY_ID AND t7.PERIOD = TO_CHAR(t1.PERIOD, 'YYYY-MM') AND t0.SCENARIO = t7.SCENARIO AND t7.TARGET_CURRENCY_ID = 'NTD'
LEFT JOIN CTE_MV t8 ON t8.PERIOD = TO_CHAR(t0.PERIOD, 'YYYY-MM') AND t0.SCENARIO = t8.SCENARIO AND t1.INV_ENTITY = t8.ENTITY_CODE
LEFT JOIN V_TRS_FACT_EXCHANGE_BANKOFTW t5 ON t8.CURRENCY_CODE = t5.CURRENCY_ID AND t5.TARGET_CURRENCY_ID = 'NTD' AND t5.PERIOD = TO_CHAR(t1.PERIOD, 'YYYY-MM') AND t0.SCENARIO = t5.SCENARIO
LEFT JOIN CTE_ENTITY t9 ON t4.CFC_INV_ENTITY_CODE = t9.ENTITY_CODE --AND t9.ENTITY_TYPE_ID = '003'
LEFT JOIN TRS_FACT_COUNTRY_TAX t10 ON t9.COUNTRY_ID = t10.COUNTRY_CODE AND t0.PERIOD BETWEEN t10.START_DATE AND t10.END_DATE
LEFT JOIN V_TRS_FACT_EXCHANGE_BANKOFTW t11 ON t4.CURRENCY_ID = t11.CURRENCY_ID AND t11.PERIOD = TO_CHAR(t4.PERIOD, 'YYYY-MM') AND t4.SCENARIO = t11.SCENARIO AND t11.TARGET_CURRENCY_ID = 'NTD'
;